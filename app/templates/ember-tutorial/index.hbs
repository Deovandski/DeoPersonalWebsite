<div class="ECT_BG">
	<div id="ECT_header">
		<h1>The Short and Sweet Ember Cli Tutorial!</h1>
	</div>
	<div id="ECT_main" class="container">
		<section>
			<article>
				<p>Knowing web development is becoming almost a requirement at this point for several majors,
even for non-computer science ones. Although the Internet has been an extremely dynamic environment for quite some time now,
the technologies that powers this same dynamic has been rather slow to change alongside as PHP and LAMP stack are still the main force behind the Internet as you can see below:</p>
				<ol>
					<li>PHP - 81.8%</li>
					<li>ASP.NET - 15.9%</li>
					<li>Ruby - 0.6%</li>
					<li>JavaScript - 0.2%</li>
				</ol>
				<p>Source from <a href="http://w3techs.com/technologies/overview/programming_language/all">W3Techs</a></p>
			</article>
			<article>
				<p>With this data alone we can conclude that only knowing PHP will be good enough. However, the data below shows another environment:</p>
				<img width="700" src="http://i.imgur.com/GnJH3mb.png">
				<p>Source from <a href="https://blog.udemy.com/modern-language-wars/">Udemy Blog</a></p>
				<p>One of the reasons why this data is rather dissonant from the previous one is because it also shows frontend development which is clearly following the dynamic trends of having a responsive one page web application.</p>
				<p>However, as the frontend technologies like Angular.js, React and Ember.js pushes the boundaries, sooner or later the same will happen for backend operations. PHP has definitely its uses, but nowadays new applications are picking up
				the edge backend technologies such as Ember Cli and Rails.</p>
				<p>With this information in mind, would you like to learn more about Ember CLI? I promise that it will not be too painful...</p>
			</article>
			<article>
				<p>If you search around, you will find several Ember Cli guides that focus on many wonderful things that Ember.js does including data handling and form entry. However, this guide will take another direction.</p>
				<p>The goal here is to create a small one page web app portfolio website that will not only be live on Heroku, but also go through a testing server every time you make changes to the source code on Github. </p>
				{{#link-to 'emberTutorial.installation' class="button2" }}Install, Test & Deploy{{/link-to}}
			</article>
		</section>
	</div>
</div>



