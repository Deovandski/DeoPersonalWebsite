<div class="STS_BG">
	<div id="STS_header">
		<h1>SASS - Inheritance</h1>
	</div>
	<div id="STS_main">
		<section>
			<article>
			<p>Another SCSS feature that is quite handy is inheritance as it allows code sharing in a parent to child direction that comes useful in several instances such as styling different <b>divs</b> elements that have an underlying similarity. If you are a visual learn, then the following image summarizes the Inheritance methodology:</p>
			<img id="inheritance101" height="150" alt="Shared characteristics and individual characteristic are maintained on a parent/child relation" src="http://i.imgur.com/1ZQVdfc.png">
			<p>Aside receiving the shared characteristics, the child elements (a.k.a the elements that inherit characteristics from the parent) can also override the shared characteristic to customize it even further. An example is the scss declarations for the code, css code and scss codes available below:</p>
<pre>
// Parent Element

</pre>
			<p>Now that the parent element has been declared, we will declare the child elements which in this case will override the color of the <b>p</b> tags previously declared.</p>
<pre>
// Child Element #1

</pre>
			<p>Inheritance is a great tool, but it is not the last one offered by SASS. It offers much other functionalities such as mixins which are essential when you deal with third-party SCSS code (or commonly named as vendors.) This tutorial is not going to cover it as it becomes much more difficulty to use them when you are not using dependencies management technologies such as Bundler available on Rails projects.</p>
			{{#link-to 'sassTutorial.more' class="button1"}}I want more!{{/link-to}}
			</article>
		</section>
	</div>
</div>



